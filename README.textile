h1. externalconfig

p(note). externalconfig is a simple plugin which allows you to load a properties/config file from anywhere on the classpath.

p(note). This means that when deploying your application as a war file inside Tomcat or other application server, you can override config values from outside the war for your Production environments etc.

p(note). externalconfig was originally conceived and coded by Dan Griffin, who gave gracious permission to release it as a module to help others.  I've amended and extended it slightly, but all credit should go to Dan.

h2. Getting started

p(note). By default, the plugin will try and load a file with the same name as your application id (e.g. 'test', 'prod', etc) with the '.properties' suffix.
If you would like to load a different file, then you can specify a filename in your application.conf with the following property:

bc. externalConfig.fileName=/external.config 

h2. Configuration

h3. externalConfig.fileName

Specify the name of the extra config file you want to load.  If you want to load multiple files, separate them with a comma.  e.g.

bc. externalConfig.fileName=/one.config,/two.config,/three.config

h3. externalConfig.fileAbsolutePath

Normally these file are located the conf folder of your application. If you want to specify another folder you can use the 'externalConfig.fileAbsolutePath'
property in combination with the 'externalConfig.fileName' propery. Like this:

bc. externalConfig.fileAbsolutePath=/usr/share/tomcat/configuration
externalConfig.fileName=/app.config

h3. externalConfig.fileNameAbsolute

If you need to specify multiple files located at different locations you can use the 'externalConfig.fileNameAbsolute' property. If you want to load multiple files, separate them with a comma.

bc. externalConfig.fileNameAbsolute=/usr/share/tomcat/configuration/app.config, /home/user/app/app.config

h3. externalConfig.URL

If you want to load a properties file from an URL you can use the externalConfig.URL property. Once again you can load multiple files by separating them with a comma. Be aware of the fact that loading property files over a network may be insecure. Externalconfig does not support authentication so the file has to be publicly accessible. Do not keep sensitive information within these files unless you know what you are doing! 

bc. externalConfig.URL=http://localhost:9000/public/sample.properties

h2. Usage

p(note). Include the plugin as a dependency in your application. It is no longer necessary for the specified files to exist. ExternalConfig will ignore none existing files. For dev/testing purposes, you can keep this file in your conf folder alongside the other config files.
